    .data
        endl:    .asciiz  "\n"   # used for cout << endl;
        albl:    .asciiz  "Value of a: " # label for a
        blbl:    .asciiz  "Value of b: " # label for b
        clbl:    .asciiz  "Value of c: " # label for c
        dlbl:    .asciiz  "Value of d: " # label for d
    .text

# a --> $s0
# b --> $s1
# c --> $s2
# d --> $s3
main:    
li $s0, 5      #a  =>  5
li $s1, 6     #b ==> 6
li $s2, 7     # c ===> 7
li $s3, -1    # d ===> -1
li, $t1, 10   # temp value is equal to 10
li, $t2, 1     # temp value is set to 1
 
 
bge $s0, $t1,else   # Checking for the statement if a < 10
add $s0,$s0,$t2   # a++ if is true
j  finish  # end if te statement above is true
else:  addi   $s0, $s0, -1  # a-- went here because above statement is false
finish:  
 
add $s3, $s0,$s2     # d = a + c; done
add $s2, $s0,$s3      # c = a + d; done
 
bge $s1, $t1,else1   # Checking for the statement if b < 10
add $s1,$s1,$t2       #b++ done
addi $s2,$s2,-1    #c-- done
j finish1
else1: sub $s1,$s1,$t2  #b--     done
         add $s2,$s1,$t2  #c++ done

finish1:

add $s0, $s2,$s1   # a = c + b done
add $s1,$s2,$s3    # b = c + d done
 

 bge $s1,$s2, else2        #  since is false for  if(b < c && b > a)
 ble  $s1, $s0, else2 # exits j label finish2
 add $s3,$s0,$s1
 j finish2
 else2: 
  ble $s1,$s2, else_if          ## Checking for the statement  if ( b > c  ||   c < a ) 
  bge $2, $s0 ,else_if	#done
  add $s3, $s1,$s2  #done
  j done
else_if:
finish2:     
done:

exit:
    la   $a0, albl      # puts albl into arg0 (a0 register) for cout
    addi $v0, $0, 4     # puts 4 in v0 which denotes we are printing a string
    syscall             # make a syscall to system
    
    move $a0, $s0       # puts a into arg0 (a0 register) for cout
    addi $v0, $0, 1     # puts 1 in v0 to denote we are printing an int 
    syscall             # make a syscall to system

    la   $a0, endl      # puts the address of the string endl into a0
    addi $v0, $0, 4     # puts 4 into v0 saying we are printing a string
    syscall

    la   $a0, blbl      # puts blbl into arg0 (a0 register) for cout
    addi $v0, $0, 4     # puts 4 in v0 which denotes we are printing an string
    syscall             # make a syscall to system
    
    move $a0, $s1       # puts b into arg0 (a0 register) for cout
    addi $v0, $0, 1     # puts 1 in v0 to denote we are printing an int 
    syscall             # make a syscall to system

    la   $a0, endl      # puts the address of the string endl into a0
    addi $v0, $0, 4     # puts 4 into v0 saying we are printing a string
    syscall

    la   $a0, clbl      # puts clbl into arg0 (a0 register) for cout
    addi $v0, $0, 4     # puts 4 in v0 which denotes we are printing a string
    syscall             # make a syscall to system
    
    move $a0, $s2       # puts c into arg0 (a0 register) for cout
    addi $v0, $0, 1     # puts 1 in v0 to denote we are printing an int 
    syscall             # make a syscall to system

    la   $a0, endl      # puts the address of the string endl into a0
    addi $v0, $0, 4     # puts 4 into v0 saying we are printing a string
    syscall

    la   $a0, dlbl      # puts dlbl into arg0 (a0 register) for cout
    addi $v0, $0, 4     # puts 4 in v0 which denotes we are printing a string
    syscall             # make a syscall to system
    
    move $a0, $s3       # puts d into arg0 (a0 register) for cout
    addi $v0, $0, 1     # puts 1 in v0 to denote we are printing an int 
    syscall             # make a syscall to system

    la   $a0, endl      # puts the address of the string endl into a0
    addi $v0, $0, 4     # puts 4 into v0 saying we are printing a string
    syscall
   
    addi $v0,$0, 10
    syscall
